{"version":3,"sources":["Book.js","components/views/LandingPage/LandingPage.js","_actions/types.js","hoc/Config.js","_actions/user_action.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","_actions/BoardTypes.js","_actions/board_action.js","hoc/auth.js","components/views/Common/Lists.js","components/views/Board/FreeBoardListPage.js","components/views/Board/FreeBoardWritePage.js","components/views/Board/FreeBoardUpdatePage.js","components/views/Board/FreeBoardDetailPage.js","components/views/Board/AddBoardWritePage.js","components/views/Board/AddBoardPage.js","components/views/Common/LeftMenu.js","components/views/Common/useDetectOutsideClick.js","components/views/Common/Header.js","components/views/Book/CBookPage.js","MapContainer.js","SearchPlace.js","App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/board_reducer.js","index.js"],"names":["withRouter","className","to","props","style","display","justifyContent","alignItems","width","height","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","USER_SERVER","auth","request","axios","get","then","response","data","type","payload","Title","Typography","dispatch","useDispatch","rememberMeChecked","localStorage","getItem","useState","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialId","initialValues","id","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","history","push","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","Item","prefix","color","placeholder","value","onChange","onBlur","fontSize","border","padding","borderRadius","checked","href","float","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","console","log","email","nickname","confirmPassword","oneOf","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","FREEBOARD_LIST","FREEBOARD_WRITE","FREEBOARD_UPDATE","FREEBOARD_DELETE","getFreeBoardList","res","SpecificComponent","option","adminRoute","AuthenticationCheck","useSelector","state","user","useEffect","isAuth","isAdmin","ListStyled","styled","div","lists","setLists","a","freeboard","map","fNo","fTitle","fUserid","fDate","fLike","fView","inputdata","concat","list","format","TitleStyled","WriteLinkStyled","TitleInput","input","QuillWrapper","buttonStyle","css","fullWidth","cyan","StyledButton","button","OutFormDiv","title","body","quillElement","useRef","quillInstance","setFTitle","fContent","setFContent","current","Quill","theme","modules","toolbar","header","quill","on","delta","oldDelta","source","root","innerHTML","BoardSubmit","e","currentTarget","ref","match","params","fno","updateTitle","setUpdateTitle","updateContent","setUpdateContent","put","TableDivStyled","ReplyContentStyled","ReplyListStyled","UserClickStyled","ReplyItemStyled","reply","setReply","Reply","fReUserid","fReComment","fReDate","replydata","writereply","setWriteRely","colspan","dangerouslySetInnerHTML","__html","userData","confirm","delNum","delete","preventDefault","fBoardNo","replace","re","menu","setMenu","aContent","background","lineHeight","cursor","marginLeft","addboard","aNo","aUserid","aDate","dropdownRef","el","initialState","isActive","setIsActive","contains","target","addEventListener","removeEventListener","useDetectOutsideClick","ImgStyled","logoImg","src","mode","status","cBookNo","cBookTitle","cBookImg","cBookReUserid","cBookReComment","cBookReDate","cBook","cBookmNo","replyres","cBookReply","setWriteReply","kakao","infowindow","maps","InfoWindow","zIndex","MapContainer","searchPlace","container","document","getElementById","options","center","LatLng","Map","displayMarker","place","marker","Marker","position","y","x","event","addListener","setContent","place_name","open","services","Places","keywordSearch","pagination","Status","OK","bounds","LatLngBounds","i","length","extend","setBounds","marginTop","SearchPlace","inputText","setInputText","setPlace","App","fallback","exact","path","component","Auth","LandingPage","LoginPage","RegisterPage","FreeBoardListPage","FreeBoardDetail","FreeBoardWritePage","FreeBoardUpdate","AddBoardPage","AddBoardWritePage","cBookPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","freeBoard","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39e74f05.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./BookMain.scss\";\r\n\r\n\r\nconst Book = () => {\r\n  return (\r\n    <div className=\"component\">\r\n      <ul className=\"aligns\">\r\n        {/*  <!-- Book 1 --> */}\r\n        <li>\r\n          <figure className=\"books\">\r\n            {/* <!-- Front --> */}\r\n            <Link to=\"/cBook\"><ul className=\"hardcover_fronts\">\r\n              <li>\r\n                중식\r\n                <span className=\"ribbons bestsellers\">중식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul></Link>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"pages\">\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_backs\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spines\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n        {/* <!-- Book 2 --> */}\r\n        <li>\r\n          <figure className=\"books\">\r\n            {/* <!-- Front --> */}\r\n            <ul className=\"hardcover_fronts\">\r\n              <li>\r\n                일식\r\n                <span className=\"ribbons bestsellers\">일식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"pages\">\r\n            <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_backs\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spines\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n        {/* <!-- Book 3 --> */}\r\n        <li>\r\n          <figure className=\"books\">\r\n            {/* <!-- Front --> */}\r\n            <ul className=\"hardcover_fronts\">\r\n              <li>\r\n                한식\r\n                <span className=\"ribbons bestsellers\">한식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"pages\">\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_backs\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spines\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n        {/* book4 */}\r\n        <li>\r\n          <figure className=\"books\">\r\n            {/* <!-- Front --> */}\r\n            <ul className=\"hardcover_fronts\">\r\n              <li>\r\n                양식\r\n                <span className=\"ribbons bestsellers\">양식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"pages\">\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_backs\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spines\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Book);\r\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Book from \"../../../Book\";\n\n\nfunction LandingPage({ props }) {\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100vh\",\n      }}\n    >\n      {/* <Header/> */}\n      <Book />\n    </div>\n  );\n}\n\nexport default withRouter(LandingPage);\n","// export const LOGIN_USER = \"login_user\";\n// export const REGISTER_USER = \"register_user\";\n// export const AUTH_USER = \"auth_user\";\nexport const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","//SERVER ROUTES\nexport const USER_SERVER = '/users';\n\n\n\n//Sizes: w300, w780, w1280, original\nexport const BACKDROP_SIZE = 'w1280'\nexport const IMAGE_SIZE = 'w1280'\n\n// w92, w154, w185, w342, w500, w780, original\nexport const POSTER_SIZE = 'w500'","\nimport axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../hoc/Config';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n\n\n\n\n\n\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_action\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Icon, Input, Button, Checkbox, Typography } from \"antd\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialId = localStorage.getItem(\"rememberMe\")\n    ? localStorage.getItem(\"rememberMe\")\n    : \"\";\n\n  return (\n    <Formik\n      initialValues={{\n        id: initialId,\n        password: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        id: Yup.string().required(\"id is required\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"Password is required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            id: values.id,\n            password: values.password,\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then((response) => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem(\"userId\", response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem(\"rememberMe\", values.id);\n                } else {\n                  localStorage.removeItem(\"rememberMe\");\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage(\"Check out your Account or Password again\");\n              }\n            })\n            .catch((err) => {\n              setFormErrorMessage(\"Check out your Account or Password again\");\n              setTimeout(() => {\n                setFormErrorMessage(\"\");\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: \"300px\" }}>\n              <Form.Item required>\n                <Input\n                  id=\"id\"\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\",}} />\n                  }\n                  placeholder=\"Enter your id\"\n                  type=\"text\"\n                  value={values.id}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.id && touched.id ? \"text-input error\" : \"text-input\"\n                  }\n                />\n                {errors.id && touched.id && (\n                  <div className=\"input-feedback\">{errors.id}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label>\n                  <p\n                    style={{\n                      color: \"#ff0000bf\",\n                      fontSize: \"0.7rem\",\n                      border: \"1px solid\",\n                      padding: \"1rem\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    {formErrorMessage}\n                  </p>\n                </label>\n              )}\n\n              <Form.Item>\n                <Checkbox\n                  id=\"rememberMe\"\n                  onChange={handleRememberMe}\n                  checked={rememberMe}\n                >\n                  Remember me\n                </Checkbox>\n                <a\n                  className=\"login-form-forgot\"\n                  href=\"/reset_user\"\n                  style={{ float: \"right\" }}\n                >\n                  forgot password\n                </a>\n                <div>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ minWidth: \"100%\" }}\n                    disabled={isSubmitting}\n                    onSubmit={handleSubmit}\n                  >\n                    Log in\n                  </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(LoginPage);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_action\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Input, Button } from \"antd\";\nimport { withRouter } from \"react-router\";\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n\n\n  console.log('props',props);\n\n\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        nickname: \"\",\n        id: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        id: Yup.string().required(\"id is required\"),\n        nickname: Yup.string().required(\"NickName is required\"),\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"Password is required\"),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n          .required(\"Confirm Password is required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            id: values.id,\n            nickname: values.nickname,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            if (response.payload.success) {\n              props.history.push(\"/users/login\");\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app2\">\n            <h2>Sign up</h2>\n            <Form\n              style={{ minWidth: \"300px\"}}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"id\">\n                <Input\n                  id=\"id\"\n                  placeholder=\"Enter your id\"\n                  type=\"text\"\n                  value={values.id}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.id && touched.id ? \"text-input error\" : \"text-input\"\n                  }\n                />\n                {errors.id && touched.id && (\n                  <div className=\"input-feedback\">{errors.id}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"NickName\">\n                <Input\n                  id=\"nickname\"\n                  placeholder=\"Enter your NickName\"\n                  type=\"text\"\n                  value={values.nickname}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.nickname && touched.nickname\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.nickname && touched.nickname && (\n                  <div className=\"input-feedback\">{errors.nickname}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Email\"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Password\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? \"error\" : \"success\"\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your Password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm Password\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your Confirm Password\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(RegisterPage);\n","export const FREEBOARD_LIST = \"freeboard_list\";\r\nexport const FREEBOARD_WRITE = \"freeboard_write\";\r\nexport const FREEBOARD_UPDATE = \"freeboard_update\";\r\nexport const FREEBOARD_DELETE = \"freeboard_delete\";\r\nexport const FREEBOARD_DETAIL = \"freeboard_detail\"\r\nexport const ADDBOARD_LIST =\"addboard_list\"","import axios from \"axios\";\r\nimport {\r\n  FREEBOARD_LIST,\r\n  FREEBOARD_WRITE,\r\n  FREEBOARD_DETAIL,\r\n  ADDBOARD_LIST,\r\n} from \"./BoardTypes\";\r\n\r\nexport function getFreeBoardList() {\r\n  const request = axios.get(\"/freeBoard\").then((res) => {});\r\n  return {\r\n    type: FREEBOARD_LIST,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function postFreeBoardPost() {\r\n  const request = axios.post(\"/freeBoard/write\").then((res) => res.data);\r\n\r\n  return {\r\n    type: FREEBOARD_WRITE,\r\n    payload: request,\r\n  };\r\n}\r\n\r\nexport function getFreeBoardDetail(fno) {\r\n  console.log(\"action에 들어왔어요 수박\");\r\n  const request = axios.get(`/freeBoard/${fno}`).then((res) => res.data);\r\n  console.log(\"request\", request);\r\n  return {\r\n    type: FREEBOARD_WRITE,\r\n    payload: request,\r\n  };\r\n}\r\n\r\n// export function postFreeBoardPost() {\r\n//   const request = axios.post(\"/freeBoard/write\").then((res) => res.data);\r\n\r\n//   return {\r\n//     type:FREEBOARD_WRITE,\r\n//     payload:request\r\n//   }\r\n// }\r\n\r\nexport function getAddBoardList() {\r\n  console.log(\"addboardlist\");\r\n  const req = axios.get(\"/addBoard\").then((res) => res.data);\r\n\r\n  return{\r\n    type:ADDBOARD_LIST,\r\n    payload:req\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\nimport Axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { auth } from '../_actions/user_action';\nimport {getFreeBoardList} from '../_actions/board_action'\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n\n    //null    =>  아무나 출입이 가능한 페이지\n    //true    =>  로그인한 유저만 출입이 가능한 페이지\n    //false   =>  로그인한 유저는 출입 불가능한 페이지\n    function AuthenticationCheck(props) {\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(response => {\n                console.log(response)\n                //로그인 하지 않은 상태 \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/users/login')\n                    }\n                } else {\n                    //로그인 한 상태 \n                    if (adminRoute && !response.payload.isAdmin) {\n                        console.log('adminRoute',adminRoute)\n                        console.log('!response.payload.isAdmin',!response.payload.isAdmin)\n                        props.history.push('/')\n                    } else {\n                        if (option === false)\n                            props.history.push('/')\n                    }\n                }\n            })\n        }, [])\n\n        return (\n            <SpecificComponent />\n        )\n    }\n    return AuthenticationCheck\n}","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFreeBoardList } from \"../../../_actions/board_action\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst ListStyled = styled.div`\r\n  width: 860px;\r\n  margin: auto;\r\n  table {\r\n    tr {\r\n      th {\r\n        text-align: center;\r\n        width: 150px;\r\n      }\r\n      .date {\r\n        width: 250px;\r\n      }\r\n      td {\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Lists = () => {\r\n  const [lists, setLists] = useState([\r\n    // {\r\n    //   fNo: \"\",\r\n    //   fTitle: \"\",\r\n    //   fUserid: \"\",\r\n    //   fContent: \"\",\r\n    //   fDate: \"\",\r\n    //   fLike: \"\",\r\n    //   fView: \"\",\r\n    // },\r\n  ]);\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state);\r\n  console.log(\"user.userData ==> \", user, \",\");\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      dispatch(getFreeBoardList());\r\n      const res = await axios.get(\"/freeBoard\");\r\n      const inputdata = await res.data.freeboard.map((data) => ({\r\n        fNo: data.fNo,\r\n        fTitle: data.fTitle,\r\n        fUserid: data.fUserid,\r\n        fDate: data.fDate,\r\n        fLike: data.fLike,\r\n        fView: data.fView,\r\n      }));\r\n      setLists(lists.concat(inputdata));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ListStyled>\r\n      <table>\r\n        <tr>\r\n          <th>글번호</th>\r\n          <th>제목</th>\r\n          <th>작성자</th>\r\n          <th className=\"date\">작성일자</th>\r\n          <th>조회수</th>\r\n        </tr>\r\n        {lists.map((list) => (\r\n          <tr>\r\n            <td className=\"fNo\">{list.fNo}</td>\r\n            <td>\r\n              <Link to={`/freeBoard/${list.fNo}`}>{list.fTitle}</Link>\r\n            </td>\r\n            <td>{list.fUserid}</td>\r\n            <td><Moment format=\"YYYY/MM/DD\">{list.fDate}</Moment></td>\r\n            <td>{list.fView}</td>\r\n          </tr>\r\n        ))}\r\n      </table>\r\n    </ListStyled>\r\n  );\r\n};\r\n\r\nexport default withRouter(Lists);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Lists from \"../Common/Lists\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TitleStyled = styled.div`\r\n  font-family: \"Jua\", sans-serif;\r\n  text-align: center;\r\n  font-size: 50px;\r\n`;\r\nconst ListStyled = styled.div`\r\n  div {\r\n    display: inline-block;\r\n    margin: 0 10px 0 0;\r\n  }\r\n`;\r\nconst WriteLinkStyled = styled.div`\r\n  border: 1px solid black;\r\n  border-radius: 25px;\r\n  vertical-align: middle;\r\n  padding: 15px;\r\n  position: relative;\r\n  right: 0px;\r\n  width: 100px;\r\n  text-align: center;\r\n  margin: 30px 150px 0 0;\r\n  transition:0.5s;\r\n  a {\r\n    color: black;\r\n  }\r\n  &:hover {\r\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\nconst FreeBoardListPage = () => {\r\n  const user = useSelector((state) => state.user);\r\n  console.log(\"게시판 목록 ==> \", user);\r\n\r\n  return (\r\n    <div>\r\n      <TitleStyled>자유게시판</TitleStyled>\r\n      <WriteLinkStyled>\r\n        <Link to={\"/freeBoardwrite\"}>작성하기</Link>\r\n      </WriteLinkStyled>\r\n      <Lists />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(FreeBoardListPage);\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Quill from \"quill\";\r\nimport \"quill/dist/quill.bubble.css\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 3rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\nconst QuillWrapper = styled.div`\r\n  margin: auto;\r\n  height: 600px;\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1.2rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.3rem 1rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: cyan;\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.8rem;\r\n      padding-bottom: 0.8rem;\r\n      width: 100%;\r\n      font-size: 1.2rem;\r\n    `}\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      &:hover {\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\nconst OutFormDiv = styled.div`\r\n  border: 1px solid black;\r\n  margin: auto;\r\n  width: 700px;\r\n  height: 800px;\r\n`;\r\n\r\nconst FreeBoardWritePage = ({ title, body, history }) => {\r\n  //quill을 적용할 Div엘리먼트 설정\r\n  const quillElement = useRef(null);\r\n  //quill 인스턴스설정\r\n  const quillInstance = useRef(null);\r\n\r\n  const [fTitle, setFTitle] = useState(\"\");\r\n  const [fContent, setFContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(fTitle, fContent);\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: \"bubble\",\r\n      placeholder: \"내용을 입력하시오\",\r\n      modules: {\r\n        toolbar: [\r\n          [{ header: \"1\" }, { header: \"2\" }],\r\n          [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n          [{ list: \"orderded\" }, { list: \"bullet\" }],\r\n          [\"blockquote\", \"code-block\", \"link\", \"image\"],\r\n        ],\r\n      },\r\n    });\r\n    const quill = quillInstance.current;\r\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\r\n      console.log(\"quill.root.innerHTML ==>\", quill.root.innerHTML);\r\n      setFContent(quill.root.innerHTML);\r\n    });\r\n  }, []);\r\n\r\n  const onChangeTitle = (e) => {\r\n    console.log(\"title\", e.currentTarget.value);\r\n    setFTitle(e.currentTarget.value);\r\n    console.log(fTitle);\r\n  };\r\n\r\n  const BoardSubmit = async (e) => {\r\n    if (fTitle !== \"\" && fContent !== \"\") {\r\n      try {\r\n        axios.post(\"/freeBoard/write\", {\r\n          fTitle: fTitle,\r\n          fContent: fContent,\r\n        });\r\n        history.push(\"/freeBoard\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OutFormDiv>\r\n      <form onSubmit={BoardSubmit}>\r\n        <TitleInput\r\n          placeholder=\"제목을 입력하시오\"\r\n          onChange={onChangeTitle}\r\n          value={title}\r\n        />\r\n        <hr />\r\n        <QuillWrapper>\r\n          <div ref={quillElement} />\r\n        </QuillWrapper>\r\n        <StyledButton>작성</StyledButton>\r\n      </form>\r\n    </OutFormDiv>\r\n  );\r\n};\r\n\r\nexport default withRouter(FreeBoardWritePage);\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Quill from \"quill\";\r\nimport \"quill/dist/quill.bubble.css\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 3rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1.2rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst buttonStyle = css`\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.3rem 1rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: cyan;\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.8rem;\r\n      padding-bottom: 0.8rem;\r\n      width: 100%;\r\n      font-size: 1.2rem;\r\n    `}\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      &:hover {\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\nconst OutFormDiv = styled.div`\r\n  border: 1px solid black;\r\n  margin: auto;\r\n  width: 700px;\r\n  height: 800px;\r\n`;\r\n\r\nconst FreeBoardUpdatePage = ({ match, history }) => {\r\n  const fNo = match.params.fno;\r\n  const quillElement = useRef(null);\r\n  //quill 인스턴스설정\r\n  const quillInstance = useRef(null);\r\n\r\n  const [lists, setLists] = useState([\r\n    {\r\n      fNo: \"\",\r\n      fTitle: \"\",\r\n      fUserid: \"\",\r\n      fContent: \"\",\r\n      fDate: \"\",\r\n      fLike: \"\",\r\n      fView: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [updateTitle, setUpdateTitle] = useState(\"\");\r\n  const [updateContent, setUpdateContent] = useState(\"\");\r\n\r\n  useEffect(async () => {\r\n    const res = await axios.get(`/freeBoard/get/${fNo}`);\r\n    console.log(\"res.data==>\", res.data.freeboard[0]);\r\n    const data = res.data.freeboard[0];\r\n    setLists(data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: \"bubble\",\r\n      // value:`${lists.fContent}`,\r\n      // placeholder: `${lists.fContent}`,\r\n      placeholder: \"제목을 입력하시오\",\r\n      modules: {\r\n        toolbar: [\r\n          [{ header: \"1\" }, { header: \"2\" }],\r\n          [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n          [{ list: \"orderded\" }, { list: \"bullet\" }],\r\n          [\"blockquote\", \"code-block\", \"link\", \"image\"],\r\n        ],\r\n      },\r\n    });\r\n\r\n    const quill = quillInstance.current;\r\n    quill.on(\"text-change\", (delta, oldDelta, source) => {\r\n      console.log(\"quill.root.innerHTML ==>\", quill.root.innerHTML);\r\n      setUpdateContent(quill.root.innerHTML);\r\n    });\r\n  }, []);\r\n\r\n  const UpdateSubmit = () => {\r\n    // alert('updateContent'+updateContent+'updateTitle ==> '+updateTitle)\r\n    if (updateContent !== \"\" && updateTitle !== \"\") {\r\n      axios.put(`/freeBoard/update/${fNo}`, {\r\n        fTitle: updateTitle,\r\n        fContent: updateContent,\r\n      });\r\n      history.push(`/freeBoard`);\r\n      // history.push(`/freeBoard/${fNo}`)\r\n    } else {\r\n      alert(\"제목이나 내용을 입력해주세요\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onChangeTitle = (e) => {\r\n    console.log(e.currentTarget.value);\r\n    setUpdateTitle(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <OutFormDiv>\r\n      <div>수정페이지</div>\r\n      <form onSubmit={UpdateSubmit}>\r\n        <TitleInput onChange={onChangeTitle} placeholder={`${lists.fTitle}`} />\r\n        <QuillWrapper>\r\n          <div ref={quillElement} />\r\n        </QuillWrapper>\r\n        <StyledButton>수정</StyledButton>\r\n      </form>\r\n      <StyledButton>목록</StyledButton>\r\n    </OutFormDiv>\r\n  );\r\n};\r\n\r\nexport default withRouter(FreeBoardUpdatePage);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { Link, matchPath, withRouter } from \"react-router-dom\";\r\nimport * as qs from \"query-string\";\r\nimport { ButtonToolbar, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFreeBoardDetail } from \"../../../_actions/board_action\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst TableDivStyled = styled.div`\r\n  width: 650px;\r\n  margin: auto;\r\n  table {\r\n    width: 650px;\r\n    th,\r\n    td {\r\n      border: 1px solid #444444;\r\n    }\r\n    text-align: center;\r\n    th {\r\n      width: 100px;\r\n    }\r\n    td {\r\n      width: 150px;\r\n    }\r\n    .content {\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\nconst ReplyContentStyled = styled.div`\r\n  width: 660px;\r\n  margin: auto;\r\n  form {\r\n    input {\r\n      vertical-align: middle;\r\n      width: 500px;\r\n      height: 30px;\r\n    }\r\n    button {\r\n      box-shadow: 2px 2px 2px gray;\r\n      border-radius: 20px;\r\n      padding: 10px;\r\n      vertical-align: middle;\r\n      width: 100px;\r\n      height: 30px;\r\n      font-size: 15px;\r\n      margin: 0 0 0 20px;\r\n    }\r\n  }\r\n`;\r\nconst ReplyListStyled = styled.div``;\r\n\r\nconst UserClickStyled = styled.div`\r\n  div {\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n    margin: 15px 15px 15px 0;\r\n    button {\r\n      box-shadow: 2px 2px 2px gray;\r\n      border-radius: 20px;\r\n      padding: 10px;\r\n      vertical-align: middle;\r\n      width: 100px;\r\n      height: 30px;\r\n      font-size: 15px;\r\n      margin: 0 0 0 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ReplyItemStyled = styled.div`\r\n  width: 650px;\r\n  div {\r\n    display: inline-block;\r\n  }\r\n  .reUserid {\r\n    vertical-align: middle;\r\n    width: 150px;\r\n    margin: 0 15px 0 0;\r\n  }\r\n  .reContent {\r\n    white-space: normal;\r\n    width: 300px;\r\n    margin: 0 15px 0 0;\r\n  }\r\n  .reDate {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst FreeBoardDetailPage = ({ match, props, history }) => {\r\n  const user = useSelector((state) => state.user);\r\n  console.log(\"user.userData\", user);\r\n\r\n  const onDelClick = (e) => {\r\n    const delNum = match.params.fno;\r\n    axios.delete(`/freeBoard/del/${delNum}`).then(history.push(\"/freeBoard\"));\r\n  };\r\n\r\n  const [lists, setLists] = useState([\r\n    // {\r\n    //   fNo: \"\",\r\n    //   fTitle: \"\",\r\n    //   fUserid: \"\",\r\n    //   fContent: \"\",\r\n    //   fDate: \"\",\r\n    //   fLike: \"\",\r\n    //   fView: \"\",\r\n    // },\r\n  ]);\r\n\r\n  const [reply, setReply] = useState([\r\n    // {\r\n    //   fReUserid: \"\",\r\n    //   fReComment: \"\",\r\n    //   fReDate: \"\",\r\n    // },\r\n  ]);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    async () => {\r\n      try {\r\n        const fNo = match.params.fno;\r\n        // dispatch(getFreeBoardDetail(fNo));\r\n        const res = await axios.get(`/freeBoard/${fNo}`);\r\n        const inputdata = await res.data.data.freeboard.map((data) => ({\r\n          fNo: data.fNo,\r\n          fTitle: data.fTitle,\r\n          fUserid: data.fUserid,\r\n          fContent: data.fContent,\r\n          fDate: data.fDate,\r\n          fLike: data.fLike,\r\n          fView: data.fView,\r\n        }));\r\n        const replydata = await res.data.data.Reply.map((data) => ({\r\n          fReUserid: data.fReUserid,\r\n          fReComment: data.fReComment,\r\n          fReDate: data.fReDate,\r\n        }));\r\n        console.log(\"replydata ==> \", replydata);\r\n        setLists(inputdata[0]);\r\n        setReply(reply.concat(replydata));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    []\r\n    // [dispatch]\r\n  );\r\n\r\n  const [writereply, setWriteRely] = useState(\"\");\r\n\r\n  const writereplyChange = (e) => {\r\n    setWriteRely(e.currentTarget.value);\r\n  };\r\n\r\n  const writeReplySubmit = (e) => {\r\n    e.preventDefault();\r\n    const fNo = match.params.fno;\r\n    if (writereply == \"\") {\r\n      return alert(\"댓글을 입력하시오\");\r\n    } else {\r\n      axios.post(`/freeBoard/fReply/write/${fNo}`, {\r\n        fBoardNo: fNo,\r\n        fReComment: writereply,\r\n      });\r\n      setWriteRely(\"\");\r\n      // .then((res) => alert('resresresresresresres',res)).catch(e => {console.log(e)});\r\n      history.replace(`/freeBoard/${fNo}`);\r\n    }\r\n  };\r\n\r\n  const updateButton = () => {\r\n    const con = window.confirm('수정페이지 이동시 그 전 데이터는 날아갈수 있습니다.');\r\n    if(con == true){\r\n      history.push(`/freeBoardupdate/${lists.fNo}`);\r\n    }else{\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableDivStyled>\r\n        <table>\r\n          <tr>\r\n            <th>글번호</th>\r\n            <td>{lists.fNo}</td>\r\n            <th>작성자</th>\r\n            <td>{lists.fUserid}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>작성날짜</th>\r\n            <td>\r\n              <Moment format=\"YYYY/MM/DD\">{lists.fDate}</Moment>\r\n            </td>\r\n            <th>조회수</th>\r\n            <td>{lists.fView}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>제목</th>\r\n            <td colspan=\"3\">{lists.fTitle}</td>\r\n          </tr>\r\n          <tr>\r\n            <th className=\"content\">내용</th>\r\n            <td className=\"writeContent\" colspan=\"3\">\r\n              <div dangerouslySetInnerHTML={{ __html: lists.fContent }} />\r\n            </td>\r\n          </tr>\r\n        </table>\r\n        <UserClickStyled>\r\n          <div>\r\n            <Link to={\"/freeBoard\"}>목록</Link>\r\n          </div>\r\n          {/* 하지만 새로 고침시 useSelector가 사라져서 오류가 뜬다.... */}\r\n          {user.userData.id == lists.fUserid ? (\r\n            <>\r\n              <div>\r\n                <button onClick={updateButton}>수정하기</button>\r\n              </div>\r\n              <div>\r\n                <button onClick={onDelClick}>삭제</button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </UserClickStyled>\r\n      </TableDivStyled>\r\n      <ReplyContentStyled>\r\n        <form onSubmit={writeReplySubmit}>\r\n          <input type=\"text\" onChange={writereplyChange} value={writereply} />\r\n          <button>작성하기</button>\r\n        </form>\r\n        <ReplyListStyled>\r\n          {reply.map((re) => {\r\n            return (\r\n              <ReplyItemStyled>\r\n                <div className=\"reUserid\">{re.fReUserid}</div>\r\n                <div className=\"reContent\">{re.fReComment}</div>\r\n                <div className=\"reDate\">\r\n                  <Moment format=\"YYYY/MM/DD\">{re.fReDate}</Moment>\r\n                </div>\r\n                <hr />\r\n              </ReplyItemStyled>\r\n            );\r\n          })}\r\n        </ReplyListStyled>\r\n      </ReplyContentStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(FreeBoardDetailPage);\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst AddBoardWritePage = ({ history }) => {\r\n  const [menu, setMenu] = useState(\"\");\r\n  const writeMenu = (e) => {\r\n    console.log(e.currentTarget.value);\r\n    setMenu(e.currentTarget.value);\r\n  };\r\n  const OnSubmit = () => {\r\n    //   alert(menu)\r\n    if (menu == \"\") {\r\n      alert(\"내용이 필요합니다.\");\r\n      return false;\r\n    }\r\n    axios.post(\"/addBoard/write\", {\r\n      aContent: menu,\r\n    });\r\n    history.push(\"/addBoard\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={OnSubmit}>\r\n        <input placeholder=\"메뉴이름 작성해주세요\" style={{padding:\"16px 50px 13px 15px\"}} onChange={writeMenu} />\r\n        <button style={{      background:\"teal\",\r\n      padding: \"0.6rem 1rem\",\r\n      border: \"3px solid teal\",\r\n      fontSize:\"1rem\",\r\n      borderRadius:\"0.5rem\",\r\n      lineHeight:\"1.7\",\r\n      cursor:\"pointer\",\r\n      marginLeft:\"3px\",\r\n     \r\n     }}>신청</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddBoardWritePage);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getAddBoardList } from \"../../../_actions/board_action\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst TitleStyled = styled.div`\r\n  text-align: center;\r\n  font-size: 50px;\r\n`;\r\n\r\nconst ListStyled = styled.div`\r\n  width: 700px;\r\n  margin: auto;\r\n  table {\r\n    tr {\r\n      th {\r\n        text-align: center;\r\n        width: 150px;\r\n      }\r\n      .date {\r\n        width: 250px;\r\n      }\r\n      td {\r\n        text-align: center;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst WriteLinkStyled = styled.div`\r\n  border: 1px solid black;\r\n  border-radius: 25px;\r\n  vertical-align: middle;\r\n  padding: 15px;\r\n  position: relative;\r\n  right: 0px;\r\n  width: 100px;\r\n  text-align: center;\r\n  margin: 30px 150px 0 0;\r\n  transition: 0.5s;\r\n  a {\r\n    color: black;\r\n  }\r\n  &:hover {\r\n    box-shadow: 0 1px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nconst AddBoardPage = () => {\r\n  const [lists, setLists] = useState([\r\n    // {\r\n    //   aNo: \"\",\r\n    //   aUserid: \"\",\r\n    //   aContent: \"\",\r\n    //   aDate: \"\",\r\n    // },\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    async () => {\r\n      try {\r\n        dispatch(getAddBoardList());\r\n        const res = await axios.get(\"/addBoard\");\r\n        const inputdata = await res.data.addboard.map((data) => ({\r\n          aNo: data.aNo,\r\n          aUserid: data.aUserid,\r\n          aContent: data.aContent,\r\n          aDate: data.aDate,\r\n        }));\r\n        setLists(lists.concat(inputdata));\r\n        console.log(\"addboard inputdata ==>\", inputdata);\r\n        console.log(\"lists ==>\", lists);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n    [dispatch]\r\n    // []\r\n  );\r\n  console.log(\"lists==>\", lists);\r\n\r\n  return (\r\n    <div>\r\n      <TitleStyled>신청게시판</TitleStyled>\r\n      <WriteLinkStyled>\r\n        <Link to={\"/addBoard/write\"}>작성하기</Link>\r\n      </WriteLinkStyled>\r\n      <ListStyled>\r\n        <table>\r\n          <tr>\r\n            <th>글번호</th>\r\n            <th>작성자</th>\r\n            <th>신청메뉴</th>\r\n            <th>작성일자</th>\r\n          </tr>\r\n\r\n          {lists.map((list) => {\r\n            if (!list) {\r\n              return <div>게시글이 없습니다.</div>;\r\n            } else {\r\n              return (\r\n                <tr key={list.aNo}>\r\n                  <td>{list.aNo}</td>\r\n                  <td>{list.aUserid}</td>\r\n                  <td>{list.aContent}</td>\r\n                  <td>\r\n                    <Moment format=\"YYYY/MM/DD\">{list.aDate}</Moment>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            }\r\n          })}\r\n        </table>\r\n      </ListStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddBoardPage);\r\n","import React, { useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDetectOutsideClick } from \"./useDetectOutsideClick\";\r\n\r\nconst LeftMenu = () => {\r\n  const dropdownRef = useRef(null);\r\n  const [isActive, setIsActive] = useDetectOutsideClick(dropdownRef, false);\r\n  const onClick = () => setIsActive(!isActive);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"menu-container\">\r\n        <button onClick={onClick} className=\"menu-trigger\">\r\n          <span>커뮤니티</span>\r\n        </button>\r\n        <nav\r\n          ref={dropdownRef}\r\n          className={`menu ${isActive ? \"active\" : \"inactive\"}`}\r\n        >\r\n          <ul>\r\n            <li>\r\n              <Link to={\"/freeBoard\"}>자유게시판</Link>\r\n            </li>\r\n            <li>\r\n              <Link to={\"/addBoard\"}>신청게시판</Link>\r\n            </li>\r\n            <li>\r\n            <Link to={\"/SearchPlace\"}>카카오맵</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(LeftMenu);\r\n","import { useState, useEffect } from \"react\";\r\n\r\n/**\r\n * Hook for handling closing when clicking outside of an element\r\n * @param {React.node} el\r\n * @param {boolean} initialState\r\n */\r\nexport const useDetectOutsideClick = (el, initialState) => {\r\n  const [isActive, setIsActive] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    const onClick = e => {\r\n      // If the active element exists and is clicked outside of\r\n      if (el.current !== null && !el.current.contains(e.target)) {\r\n        setIsActive(!isActive);\r\n      }\r\n    };\r\n\r\n    // If the item is active (ie open) then listen for clicks outside\r\n    if (isActive) {\r\n      window.addEventListener(\"click\", onClick);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", onClick);\r\n    };\r\n  }, [isActive, el]);\r\n\r\n  return [isActive, setIsActive];\r\n};\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport axios from \"axios\";\r\nimport LeftMenu from \"./LeftMenu\";\r\nimport { USER_SERVER } from \"../../../hoc/Config\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ImgStyled = styled.div`\r\n  width: 800px;\r\n  margin: auto;\r\n  text-align:center;\r\n  img {\r\n    width: 400px;\r\n    height: 250px;\r\n  }\r\n`;\r\n\r\nfunction Header(props) {\r\n  const logoImg = \"/images/logo512.png\";\r\n  const user = useSelector((state) => state.user);\r\n  console.log(\"user.userData ==> \", user.userData, \",\");\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/users/login\");\r\n      } else {\r\n        alert(\"Log Out Failed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <>\r\n        <ImgStyled>\r\n          <Link to={\"/\"}>\r\n            <img src={logoImg} />\r\n          </Link>\r\n        </ImgStyled>\r\n        <LeftMenu />\r\n        <div\r\n          className=\"header_right\"\r\n          style={{ width: \"150px\", display: \"inline-block\" }}\r\n        >\r\n          <Menu mode={props.mode}>\r\n            <Menu.Item key=\"mail\">\r\n              <Link to={\"/users/login\"}>Signin</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"app\" style={{}}>\r\n              <Link to={\"/users/register\"}>Signup</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <ImgStyled>\r\n          <Link to={\"/\"}>\r\n            <img src={logoImg} />\r\n          </Link>\r\n        </ImgStyled>\r\n        <LeftMenu />\r\n        <div className=\"header_right\" style={{ width: \"150px\" }}>\r\n          <></>\r\n          <Menu mode={props.mode}>\r\n            <Menu.Item key=\"logout\">\r\n              <a onClick={logoutHandler}>Logout</a>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"../../../Book.scss\";\r\n\r\nconst CBookPage = () => {\r\n  const user = useSelector((state) => state.user);\r\n\r\n\r\n  const [lists, setLists] = useState([\r\n    {\r\n      cBookNo: \"\",\r\n      cBookTitle: \"\",\r\n      cBookImg: \"\",\r\n      // cBookReply:\"\",\r\n    },\r\n  ]);\r\n\r\n  const [reply, setReply] = useState([\r\n    {\r\n      cBookReUserid: \"\",\r\n      cBookReComment: \"\",\r\n      cBookReDate: \"\",\r\n    },\r\n  ]);\r\n\r\n  // const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    try {\r\n\r\n      const res = await axios.get(\"/cBook\");\r\n      const inputdata = await res.data.data.cBook.map((data) => ({\r\n        cBookNo: data.cBookNo,\r\n        cBookTitle: data.cBookTitle,\r\n        cBookImg: data.cBookImg,\r\n        // cBookReply: data.cBookReply,\r\n      }));\r\n\r\n      setLists(inputdata[0]);\r\n      const cBookmNo =inputdata[0].cBookNo;\r\n      console.log('cobbokmno====>,,,',cBookmNo);\r\n\r\n      const replyres = await axios.get(`/cBook/${cBookmNo}`);\r\n      console.log('ㅁㅁㅁㅁㅁ')\r\n      const replydata = await replyres.data.data.cBookReply.map((data) => ({\r\n        cBookReUserid: data.cBookReUserid,\r\n        cBookReComment: data.cBookReComment,\r\n        cBookReDate: data.cBookReDate,\r\n      }));\r\n      console.log(\"replydata ==> \", replydata);\r\n      setReply(reply.concat(replydata));\r\n      console.log(\"lists==>\", lists);\r\n    } catch (error) {\r\n      console.log('!!',error);\r\n    }\r\n  }, []);\r\n\r\n  //댓글 write\r\n  const [writereply, setWriteReply] = useState(\"\");\r\n\r\n  const writereplyChange = (e) => {\r\n    setWriteReply(e.currentTarget.value);\r\n  };\r\n\r\n  const writeReplySubmit = (e) => {\r\n    \r\n    axios.post(`/cBook/cBookReply/write`, {\r\n      cBookmNo: lists.cBookNo,\r\n      cBookReComment: writereply,\r\n    });\r\n    \r\n    setWriteReply(\"\");\r\n    // history.push(`/cBook`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"component\">\r\n      <ul className=\"align\">\r\n        <li>\r\n          <figure className=\"book\">\r\n            {/* <!-- Front --> */}\r\n            <ul className=\"hardcover_front\">\r\n              <li>\r\n                중식\r\n                <span className=\"ribbon bestseller\">중식</span>\r\n              </li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Pages -->  */}\r\n            <ul className=\"page\">\r\n              <li></li>\r\n              <li key={lists.cBookNo}>\r\n                <h2>{lists.cBookTitle}</h2>\r\n                <Link to=\"/SearchPlace\" className=\"btn\">\r\n                  {lists.cBookImg}\r\n                </Link>\r\n              </li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            {/* <!-- Back --> */}\r\n            <ul className=\"hardcover_back\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n            <ul className=\"book_spine\">\r\n              <li></li>\r\n              <li></li>\r\n            </ul>\r\n          </figure>\r\n        </li>\r\n      </ul>\r\n      {/* 댓글 */}\r\n      <form onSubmit={writeReplySubmit}>\r\n        <textarea type=\"text\" onChange={writereplyChange} value={writereply} />\r\n        <button>작성하기</button>\r\n      </form>\r\n      {reply.map((re) => {\r\n        return (\r\n          <div>\r\n            <div>\r\n              {re.cBookReUserid}\r\n              {re.cBookReDate}\r\n            </div>\r\n            <div>{re.cBookReComment}</div>\r\n            <hr />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CBookPage);\r\n","// MapContainer.js\r\n\r\nimport React, { useEffect } from 'react';\r\n\r\nconst { kakao } = window;\r\nlet infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\nconst MapContainer = ({searchPlace}) => {\r\n    \r\n    useEffect(() => {\r\n        const container = document.getElementById('myMap');\r\n\t\tconst options = {\r\n\t\t\tcenter: new kakao.maps.LatLng(33.450701, 126.570667),\r\n\t\t\tlevel: 3\r\n\t\t};\r\n        const map = new kakao.maps.Map(container, options);\r\n    \r\n    \tconst ps = new kakao.maps.services.Places();\r\n\r\n        ps.keywordSearch(searchPlace, placesSearchCB); \r\n\r\n        function placesSearchCB (data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                let bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (let i=0; i<data.length; i++) {\r\n                    displayMarker(data[i]);    \r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }       \r\n\r\n                map.setBounds(bounds);\r\n            } \r\n        }\r\n\r\n        function displayMarker(place) {\r\n            let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n                \r\n            });\r\n                // 마커에 클릭이벤트를 등록\r\nkakao.maps.event.addListener(marker, 'click', function() {\r\n  // 마커를 클릭하면 장소명이 인포윈도우에 표출\r\n  infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n  infowindow.open(map, marker);\r\n});\r\n\r\n        }\r\n    }, [searchPlace]);\r\n\r\n\r\n    \r\n    return (\r\n        <div id='myMap' style={{\r\n            width: '882px', \r\n            height: '500px',\r\n            marginTop: '10px',\r\n            \r\n        }}></div>\r\n    );\r\n}\r\n\r\nexport default MapContainer;","// SearchPlace.js\r\n\r\nimport React, { useState } from \"react\";\r\nimport { withTheme } from \"styled-components\";\r\nimport MapContainer from \"./MapContainer\"\r\n\r\nconst SearchPlace = () => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [place, setPlace] = useState(\"\");\r\n\r\n  const onChange = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPlace(inputText);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"inputForm\" onSubmit={handleSubmit}>\r\n        <input style={{padding:\"16px 50px 13px 15px\"}}\r\n          placeholder=\"Search Place...\"\r\n          onChange={onChange}\r\n          value={inputText}\r\n        />\r\n        <button type=\"submit\" style={{color:\"white\",\r\n      background:\"teal\",\r\n      padding: \"0.6rem 1rem\",\r\n      border: \"3px solid teal\",\r\n      fontSize:\"1rem\",\r\n      borderRadius:\"0.3rem\",\r\n      lineHeight:\"1.5\",\r\n      cursor:\"pointer\",\r\n      marginTop:\"80px\",\r\n     }}>검색</button>\r\n      </form>\r\n      <MapContainer searchPlace={place} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPlace;","import React, { Suspense } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css'\nimport LandingPage from \"./components/views/LandingPage/LandingPage\";\nimport LoginPage from \"./components/views/LoginPage/LoginPage\";\nimport RegisterPage from \"./components/views/RegisterPage/RegisterPage\";\nimport Auth from \"./hoc/auth\";\nimport FreeBoardListPage from \"./components/views/Board/FreeBoardListPage\";\nimport FreeBoardWritePage from \"./components/views/Board/FreeBoardWritePage\";\nimport FreeBoardUpdate from \"./components/views/Board/FreeBoardUpdatePage\";\nimport FreeBoardDetail from \"./components/views/Board/FreeBoardDetailPage\";\n// import addBoardListPage from \"./components/views/Board/AddListBoardPage\";\nimport AddBoardWritePage from \"./components/views/Board/AddBoardWritePage\";\nimport AddBoardPage from \"./components/views/Board/AddBoardPage\";\nimport Header from \"./components/views/Common/Header\";\n// import FoodBoardListPage from \"./components/views/Board/FoodBoardListPage\";\nimport cBookPage from './components/views/Book/CBookPage';\nimport SearchPlace from \"./SearchPlace\";\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Router>\n        <Header mode=\"inline\" />\n        <div>\n          {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n          <Switch>\n            <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n            <Route\n              exact\n              path=\"/users/login\"\n              component={Auth(LoginPage, false)}\n            />\n            <Route\n              exact\n              path=\"/users/register\"\n              component={Auth(RegisterPage, false)}\n            />\n            <Route\n              exact\n              path=\"/freeBoard\"\n              component={Auth(FreeBoardListPage, null)}\n            />\n            <Route\n              // exact\n              path=\"/freeBoard/:fno\"\n              component={Auth(FreeBoardDetail, null)}\n            />\n            <Route\n              exact\n              path=\"/freeBoardwrite\"\n              component={Auth(FreeBoardWritePage, true)}\n            />\n            <Route\n              exact\n              path=\"/freeBoardupdate/:fno\"\n              component={Auth(FreeBoardUpdate, true)}\n            />\n            <Route\n              exact\n              path=\"/addBoard\"\n              component={Auth(AddBoardPage, null)}\n            />\n            <Route\n              exact\n              path=\"/addBoard/write\"\n              component={Auth(AddBoardWritePage, true)}\n            />\n            <Route\n              exact\n              path=\"/cBook\"\n              component={Auth(cBookPage, null)}\n            />\n            <Route\n              exact\n              path=\"/SearchPlace\"\n              component={Auth(SearchPlace, null)}\n            />\n            {/* <Route\n              exact\n              path=\"/foodBoard\"\n              component={Auth(FoodBoardListPage, null)}\n            /> */}\n          </Switch>\n        </div>\n      </Router>\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport freeBoard from './board_reducer'\n\n// const rootReducer = combineReducers({\n//     user\n// })\n\nexport const rootReducer = combineReducers({\n    user,\n    freeBoard\n});","// import {\n//     LOGIN_USER,\n//     REGISTER_USER,\n//     AUTH_USER\n// } from '../_actions/types';\n\n// export default function (state = {}, action) {\n//     switch (action.type) {\n//         case LOGIN_USER:\n//             return { ...state, loginSuccess: action.payload }\n//             break;\n//         case REGISTER_USER:\n//             return { ...state, register: action.payload }\n//             break;\n//         case AUTH_USER:\n//             return { ...state, userData: action.payload }\n//             break;\n//         default:\n//             return state;\n//     }\n// }\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    console.log(\"action==>\",action)\n    switch(action.type){\n        case REGISTER_USER:\n            console.log(\"REGISTER_USER ==> action.payload\",action.payload)\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            console.log(\"LOGIN_USER ==> action.payload\",action.payload)\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            console.log(\"AUTH_USER ==> action.payload\",action.payload)\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            console.log(\"LOGOUT_USER ===> action.payload\",action.payload)\n            return {...state }\n        default:\n            console.log('state ==> ',state)\n            return state;\n            // 여기서 문제이다.....\n            // return {...state, userData: {} }\n    }\n}","import {\r\n    FREEBOARD_LIST,\r\n    FREEBOARD_WRITE,\r\n    FREEBOARD_UPDATE,\r\n    FREEBOARD_DELETE,\r\n  } from \"../_actions/BoardTypes\";\r\n\r\n  \r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case FREEBOARD_LIST:\r\n            return {...state, freeBoard: action.payload }\r\n        case FREEBOARD_WRITE:\r\n            return { ...state, freeBoard: action.payload }\r\n        case FREEBOARD_UPDATE:\r\n            return {...state, freeBoard: action.payload }\r\n        case FREEBOARD_DELETE:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport \"antd/dist/antd.css\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport {rootReducer} from \"./_reducers\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk\n)(createStore);\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      rootReducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}